# person_view.enaml
from enaml.widgets.api import (Window, Form, Label, Field, WebView, Container,
                               PushButton)
from enaml.layout.api import hbox, vbox, align

from PyQt4.QtWebKit import QWebPage

enamldef SyncNetView(Window):
    attr model
    title = 'SyncNet'

    Container:
        padding = (0, 0, 0, 0)
        Container: navbar:
            padding = (10, 4, 0, 4)
            constraints = [
                hbox(back, forward, reload, address, newsite),
                align('v_center', *navbar.children),
                address.bottom + 10 == webview.top,
            ]
            PushButton: back:
                text = u'\u2190'
                clicked :: webview.proxy.widget.back()
            PushButton: forward:
                text = u'\u2192'
                clicked :: webview.proxy.widget.forward()
            PushButton: reload:
                text = u'\u21BB'
                clicked :: webview.proxy.widget.reload()
            Field: address:
                text := model.address
            PushButton: newsite:
                text = '+'
                clicked :: model.new_site()

        WebView: webview:
            activated ::
                widget = webview.proxy.widget
                widget.page().setLinkDelegationPolicy(QWebPage.DelegateAllLinks)
                widget.linkClicked.connect(model.on_link_clicked)
                widget.urlChanged.connect(model.on_url_changed)
            url << model.url


enamldef NewSiteDialog(Window): dialog:
    attr model
    title = 'Create New SyncSite'
    modality = 'application_modal'

    Container:
        Form:
            Label:
                text = 'Seed:'
            Field:
                text := model.seed
            Label:
                text = 'Secret:'
            Field:
                text := model.secret
            Label:
                text = 'Read Only:'
            Field:
                text := model.ro_secret
                enabled = False
            PushButton:
                text = 'Generate'
            Container:
                constraints = [hbox(ok, cancel),
                               align('v_center', ok, cancel),
                               ]
                PushButton: ok:
                    text = 'Ok'
                    clicked ::
                        model.on_ok_clicked()
                        dialog.close()
                PushButton: cancel:
                    text = 'Cancel'
                    clicked ::
                        model.on_cancel_clicked()
                        dialog.close()
